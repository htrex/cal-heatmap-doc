"use strict";(self.webpackChunkcal_heatmap_doc=self.webpackChunkcal_heatmap_doc||[]).push([[6316],{3905:(n,e,t)=>{t.d(e,{Zo:()=>m,kt:()=>y});var a=t(7294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,a,r=function(n,e){if(null==n)return{};var t,a,r={},i=Object.keys(n);for(a=0;a<i.length;a++)t=i[a],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(a=0;a<i.length;a++)t=i[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var d=a.createContext({}),s=function(n){var e=a.useContext(d),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},m=function(n){var e=s(n.components);return a.createElement(d.Provider,{value:e},n.children)},c="mdxType",u={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},p=a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,i=n.originalType,d=n.parentName,m=l(n,["components","mdxType","originalType","parentName"]),c=s(t),p=r,y=c["".concat(d,".").concat(p)]||c[p]||u[p]||i;return t?a.createElement(y,o(o({ref:e},m),{},{components:t})):a.createElement(y,o({ref:e},m))}));function y(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var i=t.length,o=new Array(i);o[0]=p;var l={};for(var d in e)hasOwnProperty.call(e,d)&&(l[d]=e[d]);l.originalType=n,l[c]="string"==typeof n?n:r,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},1007:(n,e,t)=>{t.d(e,{Z:()=>o});var a=t(7294),r=t(6010);const i={browserWindow:"browserWindow_my1Q",browserWindowHeader:"browserWindowHeader_jXSR",row:"row_KZDM",buttons:"buttons_uHc7",right:"right_oyze",browserWindowAddressBar:"browserWindowAddressBar_Pd8y",dot:"dot_giz1",browserWindowMenuIcon:"browserWindowMenuIcon_Vhuh",bar:"bar_rrRL",browserWindowBody:"browserWindowBody_Idgs"};function o(n){let{children:e,minHeight:t,url:o="http://localhost:3000"}=n;return a.createElement("div",{className:i.browserWindow,style:{minHeight:t}},a.createElement("div",{className:i.browserWindowHeader},a.createElement("div",{className:i.buttons},a.createElement("span",{className:i.dot,style:{background:"#f25f58"}}),a.createElement("span",{className:i.dot,style:{background:"#fbbe3c"}}),a.createElement("span",{className:i.dot,style:{background:"#58cb42"}})),a.createElement("div",{className:(0,r.Z)(i.browserWindowAddressBar,"text--truncate")},o),a.createElement("div",{className:i.browserWindowMenuIcon},a.createElement("div",null,a.createElement("span",{className:i.bar}),a.createElement("span",{className:i.bar}),a.createElement("span",{className:i.bar})))),a.createElement("div",{className:i.browserWindowBody},e))}},2669:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>d,toc:()=>m});var a=t(7462),r=(t(7294),t(3905)),i=t(1007);const o={title:"Showcase",sidebar_position:30},l=void 0,d={unversionedId:"showcase",id:"showcase",title:"Showcase",description:"Following are some examples of what you can accomplish with cal-heatmap, using real world data.",source:"@site/docs/showcase.md",sourceDirName:".",slug:"/showcase",permalink:"/docs/showcase",draft:!1,editUrl:"https://github.com/wa0x6e/cal-heatmap-doc/edit/main/docs/showcase.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{title:"Showcase",sidebar_position:30},sidebar:"tutorialSidebar",previous:{title:"Migrating from 3.x",permalink:"/docs/migrate_from_v3"},next:{title:"Advanced",permalink:"/docs/advanced/"}},s={},m=[{value:"Seattle daily maximum temperature",id:"seattle-daily-maximum-temperature",level:2},{value:"Seattle daily wind",id:"seattle-daily-wind",level:2},{value:"Seattle daily minimum temperature",id:"seattle-daily-minimum-temperature",level:2},{value:"Seattle daily average precipitation",id:"seattle-daily-average-precipitation",level:2},{value:"Dow Jones Industrial Index Trading volume",id:"dow-jones-industrial-index-trading-volume",level:2},{value:"Github profile contribution-like",id:"github-profile-contribution-like",level:2}],c={toc:m},u="wrapper";function p(n){let{components:e,...t}=n;return(0,r.kt)(u,(0,a.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Following are some examples of what you can accomplish with cal-heatmap, using real world data."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Page and examples may take longer to load, and animation may be jaggered\ndue to high number of calendars on this page.")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"All examples are accompanied by a live editable code."),(0,r.kt)("p",{parentName:"admonition"},"Edit the code, and play with the options to see the results live.")),(0,r.kt)("h2",{id:"seattle-daily-maximum-temperature"},"Seattle daily maximum temperature"),(0,r.kt)(i.Z,{mdxType:"BrowserWindow"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live noInline",live:!0,noInline:!0},"const cal = new CalHeatmap();\ncal.paint(\n  {\n    data: {\n      source: '../fixtures/seattle-weather.csv',\n      type: 'csv',\n      x: 'date',\n      y: d => +d['temp_max'],\n      groupY: 'max',\n    },\n    date: { start: new Date('2012-01-01') },\n    range: 1,\n    scale: { color: { type: 'linear', scheme: 'PRGn', domain: [0, 40] } },\n    domain: {\n      type: 'year',\n      label: { text: null },\n      subLabel: {\n        width: 30,\n        textAlign: 'start',\n        text: () => dayjs.weekdaysShort().map((d, i) => (i % 2 == 0 ? '' : d)),\n      },\n    },\n    subDomain: { type: 'day', radius: 2 },\n    itemSelector: '#ex-year',\n  },\n  [\n    [\n      Tooltip,\n      {\n        text: function (date, value, dayjsDate) {\n          return (\n            (value ? value + '\xb0C' : 'No data') + ' on ' + dayjsDate.format('LL')\n          );\n        },\n      },\n    ],\n    [\n      Legend,\n      {\n        tickSize: 0,\n        width: 150,\n        itemSelector: '#ex-year-legend',\n        label: 'Seattle max temperature \xb0C',\n      },\n    ],\n  ]\n);\n\nrender(\n  <div>\n    <div id=\"ex-year\" className=\"margin-bottom--md\"></div>\n    <a\n      className=\"button button--sm button--secondary margin-top--sm\"\n      href=\"#\"\n      onClick={e => {\n        e.preventDefault();\n        cal.previous();\n      }}\n    >\n      \u2190 Previous\n    </a>\n    <a\n      className=\"button button--sm button--secondary margin-top--sm margin-left--xs\"\n      href=\"#\"\n      onClick={e => {\n        e.preventDefault();\n        cal.next();\n      }}\n    >\n      Next \u2192\n    </a>\n    <div id=\"ex-year-legend\" style={{ float: 'right' }}></div>\n  </div>\n);\n"))),(0,r.kt)("h2",{id:"seattle-daily-wind"},"Seattle daily wind"),(0,r.kt)(i.Z,{mdxType:"BrowserWindow"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live noInline",live:!0,noInline:!0},"const cal = new CalHeatmap();\ncal.paint(\n  {\n    data: {\n      source: '../fixtures/seattle-weather.csv',\n      type: 'csv',\n      x: 'date',\n      y: d => +d['wind'],\n      groupY: 'max',\n    },\n    date: { start: new Date('2012-01-01') },\n    range: 8,\n    scale: {\n      color: {\n        type: 'quantize',\n        scheme: 'Oranges',\n        domain: [0, 1, 2, 3, 4, 5, 6, 7],\n      },\n    },\n    domain: {\n      type: 'month',\n    },\n    subDomain: { type: 'day', radius: 2 },\n    itemSelector: '#ex-wind',\n  },\n  [\n    [\n      Tooltip,\n      {\n        text: function (date, value, dayjsDate) {\n          return (\n            (value ? value + 'km/h' : 'No data') +\n            ' on ' +\n            dayjsDate.format('LL')\n          );\n        },\n      },\n    ],\n    [\n      Legend,\n      {\n        tickSize: 0,\n        width: 100,\n        itemSelector: '#ex-wind-legend',\n        label: 'Seattle wind (km/h)',\n      },\n    ],\n  ]\n);\n\nrender(\n  <div style={{ display: 'inline-block' }}>\n    <div id=\"ex-wind\"></div>\n    <a\n      className=\"button button--sm button--secondary margin-top--sm\"\n      href=\"#\"\n      onClick={e => {\n        e.preventDefault();\n        cal.previous();\n      }}\n    >\n      \u2190 Previous\n    </a>\n    <a\n      className=\"button button--sm button--secondary margin-left--xs margin-top--sm\"\n      href=\"#\"\n      onClick={e => {\n        e.preventDefault();\n        cal.next();\n      }}\n    >\n      Next \u2192\n    </a>\n    <div id=\"ex-wind-legend\" style={{ float: 'right' }}></div>\n  </div>\n);\n"))),(0,r.kt)("h2",{id:"seattle-daily-minimum-temperature"},"Seattle daily minimum temperature"),(0,r.kt)(i.Z,{mdxType:"BrowserWindow"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live noInline",live:!0,noInline:!0},"const cal = new CalHeatmap();\ncal.paint(\n  {\n    data: {\n      source: '../fixtures/seattle-weather.csv',\n      type: 'csv',\n      x: 'date',\n      y: d => +d['temp_min'],\n      groupY: 'min',\n    },\n    verticalOrientation: true,\n    range: 5,\n    itemSelector: '#ex-1',\n    date: { start: new Date('2012-01-01') },\n    scale: { color: { type: 'diverging', scheme: 'PRGn', domain: [-10, 15] } },\n    domain: {\n      type: 'month',\n      padding: [10, 10, 10, 10],\n      label: { position: 'top' },\n    },\n    subDomain: { type: 'xDay', radius: 2, width: 15, height: 15, label: 'D' },\n  },\n  [\n    [\n      Tooltip,\n      {\n        text: function (date, value, dayjsDate) {\n          return (\n            (value ? value + '\xb0C' : 'No data') + ' on ' + dayjsDate.format('LL')\n          );\n        },\n      },\n    ],\n  ]\n);\nrender(\n  <div>\n    <div id=\"ex-1\" className=\"margin-bottom--md\"></div>\n    <a\n      className=\"button button--sm button--secondary\"\n      href=\"#\"\n      onClick={e => {\n        e.preventDefault();\n        cal.previous();\n      }}\n    >\n      \u2190 Previous\n    </a>\n    <a\n      className=\"button button--sm button--secondary margin-left--xs\"\n      href=\"#\"\n      onClick={e => {\n        e.preventDefault();\n        cal.next();\n      }}\n    >\n      Next \u2192\n    </a>\n  </div>\n);\n"))),(0,r.kt)("h2",{id:"seattle-daily-average-precipitation"},"Seattle daily average precipitation"),(0,r.kt)(i.Z,{mdxType:"BrowserWindow"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live noInline",live:!0,noInline:!0},"const cal = new CalHeatmap();\nlet dayRowTemplate = (dateHelper, { domain }) => ({\n  name: 'day_row',\n  allowedDomainType: ['month'],\n  rowsCount() {\n    return 1;\n  },\n  columnsCount(d) {\n    return domain.dynamicDimension\n      ? dateHelper.date(d).endOf('month').date()\n      : 31;\n  },\n  mapping: (startDate, endDate, defaultValues) => {\n    return dateHelper\n      .intervals('day', startDate, dateHelper.date(endDate))\n      .map((d, index) => ({\n        t: d,\n        x: index,\n        y: 0,\n        ...defaultValues,\n      }));\n  },\n\n  format: {\n    date: 'Do',\n    legend: 'Do',\n  },\n  extractUnit(d) {\n    return dateHelper.date(d).startOf('day').valueOf();\n  },\n});\n\ncal.addTemplates(dayRowTemplate);\n\ncal.paint(\n  {\n    range: 6,\n    date: {\n      start: new Date('2012-01-01'),\n      min: new Date('2012-01-01'),\n      max: new Date('2015-12-01'),\n    },\n    data: {\n      source: '../fixtures/seattle-weather.csv',\n      type: 'csv',\n      x: 'date',\n      y: d => +d['precipitation'],\n    },\n    domain: { type: 'month', gutter: 5, label: { textAlign: 'start' } },\n    subDomain: {\n      type: 'day_row',\n      width: 3,\n      height: 35,\n      gutter: 0,\n    },\n    scale: {\n      opacity: {\n        baseColor: '#ee79bd',\n        domain: [0, 35],\n      },\n    },\n    itemSelector: '#ex-2',\n  },\n  [\n    [\n      Tooltip,\n      {\n        text: function (date, value, dayjsDate) {\n          return (\n            (value ? value + 'mm' : 'No data') + ' on ' + dayjsDate.format('LL')\n          );\n        },\n      },\n    ],\n  ]\n);\n\nrender(\n  <div>\n    <div id=\"ex-2\"></div>\n    <a\n      className=\"button button--sm button--secondary\"\n      href=\"#\"\n      onClick={e => {\n        e.preventDefault();\n        cal.previous();\n      }}\n    >\n      \u2190 Previous\n    </a>\n    <a\n      className=\"button button--sm button--secondary margin-left--xs\"\n      href=\"#\"\n      onClick={e => {\n        e.preventDefault();\n        cal.next();\n      }}\n    >\n      Next \u2192\n    </a>\n  </div>\n);\n"))),(0,r.kt)("h2",{id:"dow-jones-industrial-index-trading-volume"},"Dow Jones Industrial Index Trading volume"),(0,r.kt)(i.Z,{mdxType:"BrowserWindow"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live noInline",live:!0,noInline:!0},"const weekDaysTemplate = DateHelper => ({\n  name: 'weekday',\n  parent: 'day',\n  rowsCount: () => 5,\n  columnsCount: () => 54,\n  mapping: (startTimestamp, endTimestamp) => {\n    let weekNumber = 0;\n    let x = -1;\n\n    return DateHelper.intervals(\n      'day',\n      startTimestamp,\n      DateHelper.date(endTimestamp)\n    )\n      .map(ts => {\n        const date = DateHelper.date(ts);\n\n        if (weekNumber !== date.week()) {\n          weekNumber = date.week();\n          x += 1;\n        }\n\n        if (date.format('d') === '0' || date.format('d') === '6') {\n          return null;\n        }\n\n        return {\n          t: ts,\n          x,\n          y: date.format('d') - 1,\n        };\n      })\n      .filter(n => n !== null);\n  },\n});\nconst cal = new CalHeatmap();\ncal.addTemplates(weekDaysTemplate);\ncal.paint(\n  {\n    range: 5,\n    date: {\n      start: new Date('2007-01-01'),\n      min: new Date('2000-05-01'),\n      max: new Date('2020-05-01'),\n      timezone: 'utc',\n    },\n    data: {\n      source: '../fixtures/DJIA.csv',\n      type: 'csv',\n      x: 'Date',\n      y: d => +d['Volume'],\n    },\n    domain: {\n      type: 'year',\n      label: {\n        position: 'left',\n        textAlign: 'end',\n        width: 50,\n        offset: { x: -10, y: 5 },\n      },\n    },\n    legend: {\n      show: true,\n      label: 'Daily Volume',\n      width: 150,\n      marginLeft: 10,\n      marginRight: 10,\n    },\n    verticalOrientation: true,\n    subDomain: {\n      type: 'weekday',\n    },\n    scale: {\n      color: {\n        type: 'quantize',\n        domain: [50000000, 500000000],\n        scheme: 'YlOrRd',\n      },\n    },\n    itemSelector: '#ex-stock',\n  },\n  [\n    [LegendLite, { itemSelector: '#ex-stock-legend', includeBlank: true }],\n    [\n      Tooltip,\n      {\n        text: function (date, value, dayjsDate) {\n          return (\n            (value ? d3.format(',')(value) : 'No volume') +\n            ' on ' +\n            dayjsDate.format('dddd LL')\n          );\n        },\n      },\n    ],\n  ]\n);\n\nrender(\n  <div>\n    <div id=\"ex-stock\" className=\"margin-bottom--md\"></div>\n    <a\n      className=\"button button--sm button--secondary\"\n      href=\"#\"\n      onClick={e => {\n        e.preventDefault();\n        cal.previous();\n      }}\n    >\n      \u2190 Previous\n    </a>\n    <a\n      className=\"button button--sm button--secondary margin-left--xs\"\n      href=\"#\"\n      onClick={e => {\n        e.preventDefault();\n        cal.next();\n      }}\n    >\n      Next \u2192\n    </a>\n    <div style={{ float: 'right', fontSize: 11, marginTop: '5px' }}>\n      Calm\n      <div\n        id=\"ex-stock-legend\"\n        style={{ display: 'inline-block', margin: '0 8px' }}\n      ></div>\n      Busy\n    </div>\n  </div>\n);\n"))),(0,r.kt)("h2",{id:"github-profile-contribution-like"},"Github profile contribution-like"),(0,r.kt)(i.Z,{mdxType:"BrowserWindow"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live noInline",live:!0,noInline:!0},"const cal = new CalHeatmap();\ncal.paint(\n  {\n    data: {\n      source: '../fixtures/seattle-weather.csv',\n      type: 'csv',\n      x: 'date',\n      y: d => +d['temp_max'],\n      groupY: 'max',\n    },\n    date: { start: new Date('2012-01-01') },\n    range: 12,\n    scale: {\n      color: {\n        type: 'threshold',\n        range: ['#14432a', '#166b34', '#37a446', '#4dd05a'],\n        domain: [10, 20, 30],\n      },\n    },\n    domain: {\n      type: 'month',\n      gutter: 4,\n      label: { text: 'MMM', textAlign: 'start', position: 'top' },\n      subLabel: {\n        width: 30,\n        textAlign: 'start',\n        text: () => dayjs.weekdaysShort().map((d, i) => (i % 2 == 0 ? '' : d)),\n      },\n    },\n    subDomain: { type: 'ghDay', radius: 2, width: 11, height: 11, gutter: 4 },\n    itemSelector: '#ex-ghDay',\n  },\n  [\n    [\n      Tooltip,\n      {\n        text: function (date, value, dayjsDate) {\n          return (\n            (value ? value : 'No') +\n            ' contributions on ' +\n            dayjsDate.format('dddd, MMMM D, YYYY')\n          );\n        },\n      },\n    ],\n    [\n      LegendLite,\n      {\n        includeBlank: true,\n        itemSelector: '#ex-ghDay-legend',\n        radius: 2,\n        width: 11,\n        height: 11,\n        gutter: 4,\n      },\n    ],\n  ]\n);\n\nrender(\n  <div\n    style={{\n      background: '#22272d',\n      color: '#adbac7',\n      borderRadius: '3px',\n      padding: '1rem',\n      overflow: 'hidden',\n    }}\n  >\n    <div id=\"ex-ghDay\" className=\"margin-bottom--md\"></div>\n    <a\n      className=\"button button--sm button--secondary margin-top--sm\"\n      href=\"#\"\n      onClick={e => {\n        e.preventDefault();\n        cal.previous();\n      }}\n    >\n      \u2190 Previous\n    </a>\n    <a\n      className=\"button button--sm button--secondary margin-top--sm margin-left--xs\"\n      href=\"#\"\n      onClick={e => {\n        e.preventDefault();\n        cal.next();\n      }}\n    >\n      Next \u2192\n    </a>\n    <div style={{ float: 'right', fontSize: 12 }}>\n      <span style={{ color: '#768390' }}>Less</span>\n      <div\n        id=\"ex-ghDay-legend\"\n        style={{ display: 'inline-block', margin: '0 4px' }}\n      ></div>\n      <span style={{ color: '#768390', fontSize: 12 }}>More</span>\n    </div>\n  </div>\n);\n"))))}p.isMDXComponent=!0}}]);